{
  "HTML": {
    "title": "HTML Basics",
    "description": "HTML (Hypertext Markup Language) is the standard for creating web pages, structuring content with elements and attributes. Browsers interpret HTML tags to render pages. HTML5, the current standard, adds semantic elements, multimedia support, and form controls. It works with CSS for styling and JavaScript for interactivity, forming web development's foundation.",
  
    "resources": [
      
      { "name": "Elzero Web School", "url": "https://www.youtube.com/watch?v=6QAELgirvjs&list=PLDoPjvoNmBAw_t_XWUFbBX-c9MafPk9ji" },
      { "name": "W3Schools HTML", "url": "https://www.w3schools.com/html/" },
      { "name": "developer mozilla", "url": "https://developer.mozilla.org/en-US/docs/Web/HTML" }
    ]
  },
  "CSS": {
    "title": "CSS Fundamentals",
    "description": "CSS (Cascading Style Sheets) is what makes websites look good. It's a language used to style HTML documents, controlling things like layout, colors, and fonts. CSS keeps the design separate from the HTML content, which makes websites easier to manage. It uses 'selectors' to pick HTML elements and apply styles. CSS also helps make websites responsive, meaning they look good on any device, thanks to media queries. Important ideas in CSS are the cascade (how styles override each other), inheritance (how styles pass from parent to child elements), and specificity (which style rule wins). Modern CSS has cool tools like Flexbox and Grid for layout, plus animations and transitions for interactive designs.",
    "resources": [
      { "name": "Elzero Web School", "url": "https://www.youtube.com/watch?v=6QAELgirvjs&list=PLDoPjvoNmBAw_t_XWUFbBX-c9MafPk9ji" },
      { "name": "developer mozilla", "url": "https://developer.mozilla.org/ar/docs/Web/CSS" }
    ]
  },
  "Rsponsive Design": {
    "title": "Responsive Design",
    "description": "Responsive design is a design approach that makes web pages look good on all devices. It uses flexible layouts, images, and media queries to adjust the design to different screen sizes. This ensures that the website looks good on any device, from smartphones to desktops.",
    "resources": [
      { "name": "Responsive Web Design Basics", "url": "https://web.dev/responsive-web-design-basics/" },
      { "name": "developer mozilla", "url": "https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design" },
      { "name": "freecodecamp", "url": "https://www.youtube.com/watch?v=srvUrASNj0s" }
    ]
  },
  "Git & GitHub Basics": {
    "title": "Git & GitHub Basics",
    "description": "Git is a tool for tracking changes in any set of files, making it easier to collaborate on projects. GitHub is a platform that allows you to host and share your Git repositories online. It's a great way to store and manage your code, collaborate with others, and keep track of your projects.",
    "resources": [
      { "name": "Elzero Web School", "url": "https://www.youtube.com/watch?v=ACOiGZoqC8w&list=PLDoPjvoNmBAw4eOj58MZPakHjaO3frVMF" },
      { "name": "atlassian", "url": "https://www.atlassian.com/git/tutorials" },
      { "name": "Learn Git Branching", "url": "https://learngitbranching.js.org/" }
    ]
  },
  "JavaScript Basics": {
    "title": "JavaScript Basics",
    "description": "JavaScript is a key programming language for the web. It makes websites interactive, like when things move or change when you click them. It works in web browsers but also on servers (with Node.js) and for desktop apps. JavaScript is flexible and always updating, making it very popular for all kinds of web development.",
    "resources": [
      { "name": "Elzero Web School", "url": "https://www.youtube.com/watch?v=GM6dQBmc-Xg&list=PLDoPjvoNmBAx3kiplQR_oeDqLDBUDYwVv" },
      { "name": "developer mozilla", "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide" },
      { "name": "javascript.info", "url": "https://javascript.info/" },
      { "name": "book", "url": "https://eloquentjavascript.net/" }
      
    ]
  },
  "Events & Forms": {
    "title": "Events & Forms",
    "description": "Responsive design is a design approach that makes web pages look good on all devices. It uses flexible layouts, images, and media queries to adjust the design to different screen sizes. This ensures that the website looks good on any device, from smartphones to desktops.",
    "resources": [
      { "name": "tech with tim", "url": "https://www.youtube.com/watch?v=lO6MunNmZWU" },
      { "name": "developer mozilla", "url": "https://developer.mozilla.org/en-US/docs/Learn_web_development/Extensions/Forms" }
    ]
  },
  "JvaScript & DOM": {
    "title": "JavaScript & DOM",
    "description": "DOM is a programming interface for HTML and XML documents. It represents the page so that programs can change the document structure, style, and content. The DOM represents the document as nodes and objects. This allows programs to change the document structure, style, and content.",
    "resources": [
      { "name": "Elzero Web School", "url": "https://www.youtube.com/watch?v=LlQC9sU0coM&list=PLDoPjvoNmBAxx97QDMOCpzxbu1ZHJ4i7i" },
      { "name": "developer mozilla", "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model" }
    ]
  },
  
  "API & Fetch": {
    "title": "API & Fetch",
    "description": "API is a programming interface for a web application. It allows developers to access the application's data and functionality. Fetch API is a modern way to fetch data from a server. It is a promise-based API that returns a response object.",
    "resources": [
      { "name": "bytegrad", "url": "https://www.youtube.com/watch?v=XHokFQeQ6Lk&list=PLK5U0tyd34tBsRqm-ki81vtlioGv9j7Ky" },
      { "name": "developer mozilla", "url": "https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API" }
    ]
  },
  "Deploy React Project": {
    "title": "Deploy React Project",
    "description": "Learn how to deploy a React application online.",
    "resources": [
      { "name": "Host & Deploy a React Application", "url": "https://www.youtube.com/watch?v=Ey_90l9GaAw" },
      { "name": "Deploying React Apps", "url": "https://create-react-app.dev/docs/deployment/" }
    ]
  },
  "API Calls in React": {
    "title": "API Calls in React",
    "description": "How to fetch data from an API inside a React application.",
    "resources": [
      { "name": "course", "url": "https://www.youtube.com/watch?v=XsP9HDAOZL8" },
      { "name": "article", "url": "https://legacy.reactjs.org/docs/faq-ajax.html" }

    ]
  },
  "Adinin Dashboaid": {
    "title": "Admin Dashboard",
    "description": "A project for an admin dashboard for an application, integrating everything you've learned.",
    "resources": [
      { "name": "ptoject", "url": "https://www.youtube.com/watch?v=KqZGuzrY9D4" },
      { "name": "article", "url": "https://www.freecodecamp.org/news/build-admin-dashboard-react/?utm_source=chatgpt.com" }

    ]
  },
  "Weather App with API": {
    "title": "Weather App with API",
    "description": "A project for a weather app that uses an external API.",
    "resources": [
      { "name": "project1", "url": "https://www.youtube.com/watch?v=KqZGuzrY9D4" },
      { "name": "project2", "url": "https://www.youtube.com/watch?v=SmedROogTzY" }

    ]
  },
  "To Do App": {
    "title": "To Do App",
    "description": "A project for a simple to-do app to practice the basics.",
    "resources": [
      { "name": "React To-Do App Tutorial", "url": "https://www.youtube.com/watch?v=E1E08i2UJGI" },
      { "name": "ptoject", "url": "https://www.amazon.com/Beginning-React-Hooks-Greg-Lim/dp/1793850240" }
    ]
  },
  "Convert Figma Design to Code": {
    "title": "Convert Figma Design to Code",
    "description": "Learn how to convert Figma designs to code.",
    "resources": [
      { "name": "course", "url": "https://www.youtube.com/watch?v=-33oY1V14IQ&list=PL0-e1OMq5RP4BIrTQPrqu6Jxsfp94xK8Z" },
      { "name": "article", "url": "https://uxdesign.cc/" }
    ]
  },
  "Project Libraries": {
    "title": "Project Libraries",
    "description": "Learn about the most popular frontend libraries like React, Vue, Angular.",
    "resources": [
      { "name": "github", "url": "https://github.com/enaqx/awesome-react" }
     
    ]
  },
  "Projects Organization": {
    "title": "Projects Organization",
    "description": "Best ways to organize files and folders for projects.",
    "resources": [
      { "name": "course", "url": "https://www.youtube.com/watch?v=gY5sGvq-8h8" },
      { "name": "article", "url": "https://legacy.reactjs.org/docs/faq-structure.html" }
    ]
  },
  "React.js": {
    "title": "React.js",
    "description": "Learn the React library for building interactive interfaces.",
    "resources": [
      { "name": "course", "url": "https://www.youtube.com/watch?v=CgkZ7MvWUAA" },
      { "name": "article", "url": "https://react.dev/learn" }
    ]
  },
  "State Management": {
    "title": "State Management",
    "description": "Methods for managing state in React applications.",
    "resources": [
      { "name": "course", "url": "https://www.youtube.com/watch?v=VenLRGHx3D4" },
      { "name": "React Native State Management", "url": "https://reactnative.dev/docs/state" }
    ]
  },
  "Routing": {
    "title": "React Router",
    "description": "Learn how to navigate between pages in web applications.",
    "resources": [
      { "name": "course", "url": "https://www.youtube.com/watch?v=Law7wfdg_ls" },
      { "name": "article", "url": "https://reactrouter.com/6.28.0/start/tutorial" }
    ]
  },
  "Projects & Specialization": {
    "title": "Projects & Specialization",
    "description": "Start your own projects and specialize in the field you prefer.",
    "resources": [
      { "name": "course", "url": "https://www.youtube.com/watch?v=Wm6CUkswsNw" },
      { "name": "article", "url": "https://personalmba.com/" }
    ]
  },
  "Choose Backend Language": {
    "title": "Choose a Backend Language",
    "description": "Select a programming language for backend development. Popular choices include Node.js (JavaScript), Python, Java, C#, PHP, and Go. Each has its strengths and use cases.",
    "resources": [
      { "name": "Node.js Official Documentation", "url": "https://nodejs.org/en/docs/" },
      { "name": "Python Official Documentation", "url": "https://docs.python.org/3/" },
      { "name": "Java Documentation", "url": "https://docs.oracle.com/en/java/" },
      { "name": "python course", "url": "https://elzero.org/study/mastering-python-study-plan/" }
       
    ]
  },
  "Server Programming": {
    "title": "Server-side Programming",
    "description": "Learn the fundamentals of server-side programming including HTTP protocols, request/response cycles, server architecture, and handling client requests.",
    "resources": [
      { "name": "HTTP Protocol Guide", "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP" }
    ]
  },
  "RESTful APIs": {
    "title": "RESTful APIs",
    "description": "Master REST (Representational State Transfer) API design principles, HTTP methods, status codes, and best practices for building scalable web services.",
    "resources": [
      { "name": "REST API Tutorial", "url": "https://restfulapi.net/" },
      { "name": "HTTP Status Codes", "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status" }
    ]
  },
  "JSON Format": {
    "title": "JSON Format",
    "description": "Learn JavaScript Object Notation (JSON) for data exchange between client and server. Understand JSON syntax, parsing, and serialization.",
    "resources": [
      { "name": "JSON Official Documentation", "url": "https://www.json.org/json-en.html" },
      { "name": "JSON Tutorial", "url": "https://www.w3schools.com/js/js_json_intro.asp" },
      { "name": "JSON Best Practices", "url": "https://jsonapi.org/format/" }
    ]
  },
  "SQL Databases": {
    "title": "SQL Databases",
    "description": "Learn Structured Query Language (SQL) for relational databases. Master MySQL and PostgreSQL for data storage, queries, and database design.",
    "resources": [
      { "name": "MySQL Documentation", "url": "https://dev.mysql.com/doc/" },
      { "name": "PostgreSQL Documentation", "url": "https://www.postgresql.org/docs/" },
      { "name": "SQL Tutorial", "url": "https://www.w3schools.com/sql/" }
    ]
  },
  "NoSQL Databases": {
    "title": "NoSQL Databases",
    "description": "Explore NoSQL databases like MongoDB for flexible, document-based data storage. Learn when and how to use NoSQL vs SQL databases.",
    "resources": [
      { "name": "MongoDB Documentation", "url": "https://docs.mongodb.com/" },
      { "name": "MongoDB University", "url": "https://university.mongodb.com/" }
    ]
  },
  "CRUD Operations": {
    "title": "Database CRUD Operations",
    "description": "Master Create, Read, Update, and Delete (CRUD) operations for database management. Learn efficient data manipulation techniques.",
    "resources": [
      { "name": "CRUD Operations Guide", "url": "https://www.freecodecamp.org/news/crud-operations-explained/" },
      { "name": "Database Operations Tutorial", "url": "https://www.w3schools.com/sql/sql_intro.asp" }
    ]
  },
  "ORM/ODM": {
    "title": "Object-Relational Mapping",
    "description": "Learn ORM (Object-Relational Mapping) and ODM (Object-Document Mapping) tools like Sequelize, Prisma, Mongoose, and SQLAlchemy for database abstraction.",
    "resources": [
      { "name": "Sequelize Documentation", "url": "https://sequelize.org/" },
      { "name": "Prisma Documentation", "url": "https://www.prisma.io/docs/" },
      { "name": "Mongoose Documentation", "url": "https://mongoosejs.com/docs/" },
      { "name": "SQLAlchemy Documentation", "url": "https://docs.sqlalchemy.org/" }
    ]
  },
  "Web Framework": {
    "title": "Web Framework - Express.js",
    "description": "Learn Express.js, a minimal and flexible Node.js web application framework. Build RESTful APIs and web applications efficiently.",
    "resources": [
      { "name": "Express.js Documentation", "url": "https://nodejs.org/en/learn/getting-started/introduction-to-nodejs" },
      { "name": "Express.js Tutorial", "url": "https://www.tutorialspoint.com/expressjs/" }
    ]
  },
  "Routing & Middleware": {
    "title": "Routing and Middleware",
    "description": "Master routing concepts and middleware patterns. Learn how to organize routes, handle authentication, validation, and request processing.",
    "resources": [
      { "name": "Express.js Routing", "url": "https://expressjs.com/en/guide/routing.html" },
      { "name": "Express.js Middleware", "url": "https://expressjs.com/en/guide/using-middleware.html" }
    ]
  },
  "Authentication": {
    "title": "Authentication Systems",
    "description": "Implement secure authentication systems including user registration, login, password hashing, and session management.",
    "resources": [
      { "name": "Authentication Best Practices", "url": "https://owasp.org/www-project-cheat-sheets/cheatsheets/Authentication_Cheat_Sheet.html" },
      { "name": "Password Hashing Guide", "url": "https://auth0.com/blog/hashing-passwords-one-way-road-to-security/" },
      { "name": "Session Management", "url": "https://www.owasp.org/index.php/Session_Management_Cheat_Sheet" }
    ]
  },
  "Sessions & JWT": {
    "title": "Sessions and JWT",
    "description": "Learn session-based authentication and JSON Web Tokens (JWT) for stateless authentication. Understand when to use each approach.",
    "resources": [
      { "name": "JWT Official Documentation", "url": "https://jwt.io/" }
    ]
  },
  "File Uploads": {
    "title": "File Upload Handling",
    "description": "Implement secure file upload functionality including file validation, storage, and serving. Learn about cloud storage solutions.",
    "resources": [
      { "name": "File Upload Security", "url": "https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload" },
      { "name": "Multer Documentation", "url": "https://github.com/expressjs/multer" },
      { "name": "Cloud Storage Solutions", "url": "https://aws.amazon.com/s3/" }
    ]
  },
  "Project Structure": {
    "title": "Project Structure",
    "description": "Learn best practices for organizing backend projects including folder structure, modular architecture, and code organization patterns.",
    "resources": [
      { "name": "Express.js Project Structure", "url": "https://expressjs.com/en/starter/generator.html" },
      { "name": "Clean Architecture", "url": "https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html" }
    ]
  },
  "Environment Config": {
    "title": "Environment Config",
    "description": "Learn to manage configuration using environment variables for different deployment environments (development, staging, production).",
    "resources": [
      { "name": "Environment Variables Best Practices", "url": "https://12factor.net/config" },
      { "name": "Dotenv Documentation", "url": "https://github.com/motdotla/dotenv" }
    ]
  },
  "WebSockets": {
    "title": "WebSockets",
    "description": "Implement real-time communication using WebSockets for features like chat applications, live updates, and real-time notifications.",
    "resources": [
      { "name": "WebSocket Documentation", "url": "https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API" },
      { "name": "Socket.io Documentation", "url": "https://socket.io/docs/" }
    ]
  },
  "GraphQL": {
    "title": "GraphQL",
    "description": "Learn GraphQL as an alternative to REST APIs. Understand schema design, resolvers, and building efficient data APIs.",
    "resources": [
      { "name": "GraphQL Official Documentation", "url": "https://graphql.org/learn/" },
      { "name": "Apollo Server Documentation", "url": "https://www.apollographql.com/docs/apollo-server/" }
    ]
  },
  "Input Validation": {
    "title": "Input Validation",
    "description": "Implement robust input validation to prevent security vulnerabilities and ensure data integrity in your applications.",
    "resources": [
      { "name": "Joi Validation Library", "url": "https://joi.dev/" },
      { "name": "Express Validator", "url": "https://express-validator.github.io/docs/" }
    ]
  },
  "Rate Limiting": {
    "title": "Rate Limiting",
    "description": "Implement rate limiting to protect your APIs from abuse and ensure fair usage. Learn different rate limiting strategies.",
    "resources": [
      { "name": "Express Rate Limit", "url": "https://github.com/nfriedly/express-rate-limit" },
      { "name": "Rate Limiting Strategies", "url": "https://cloud.google.com/architecture/rate-limiting-strategies-techniques" }
    ]
  },
  "Security Headers": {
    "title": "Security Headers",
    "description": "Implement security headers to protect your applications from common web vulnerabilities like XSS, CSRF, and clickjacking.",
    "resources": [
      { "name": "Security Headers Guide", "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers#security" },
      { "name": "Helmet.js Documentation", "url": "https://helmetjs.github.io/" },
      { "name": "OWASP Security Headers", "url": "https://owasp.org/www-project-secure-headers/" }
    ]
  },
  "Docker": {
    "title": "Docker Containerization",
    "description": "Learn Docker for containerizing your applications. Understand Dockerfiles, containers, images, and container orchestration.",
    "resources": [
      { "name": "Docker Official Documentation", "url": "https://docs.docker.com/" },
      { "name": "Docker Best Practices", "url": "https://docs.docker.com/develop/dev-best-practices/" }
    ]
  },
  "Deployment": {
    "title": "Application Deployment",
    "description": "Learn to deploy your backend applications to production environments using cloud platforms like AWS, Heroku, or DigitalOcean.",
    "resources": [
      { "name": "Heroku Documentation", "url": "https://devcenter.heroku.com/" },
      { "name": "AWS Deployment Guide", "url": "https://aws.amazon.com/getting-started/hands-on/deploy-nodejs-web-app/" }
    ]
  },
  "Choose Platform": {
    "title": "Choose Mobile Platform",
    "description": "Decide between iOS, Android, or cross-platform development. Understand the pros and cons of each platform and their development requirements.",
    "resources": [
      { "name": "iOS vs Android vs Cross-platform 1", "url": "https://www.lizard.global/blog/android-vs-ios-vs-cross-platform-which-should-i-choose-app-development" },
      { "name": "iOS vs Android vs Cross-platform 2", "url": "https://www.marketingsource.com/post/android-ios-or-cross-platform-app-development-which-is-the-best" }
    ]
  },
  "Programming Basics": {
    "title": "Programming Fundamentals",
    "description": "Learn fundamental programming concepts including variables, data types, control structures, functions, and object-oriented programming principles.",
    "resources": [
      { "name": "java 1", "url": "https://www.youtube.com/watch?v=mNvJipMTKSM&list=PLCInYL3l2AajYlZGzU_LVrHdoouf8W6ZN" },
      { "name": "java 2", "url": "https://www.youtube.com/watch?v=FbviMTJ_vP8&list=PL1DUmTEdeA6K7rdxKiWJq6JIxTvHalY8f" },
      { "name": "c++", "url": "https://www.youtube.com/watch?v=DzwcA_sRIss&list=PL3X--QIIK-OFIRbOHbOXbcfSAvw198lUy" }
    ]
  },
  "Mobile UI Design": {
    "title": "Mobile UI/UX Design",
    "description": "Learn mobile-specific design principles, patterns, and best practices for creating intuitive and engaging user interfaces.",
    "resources": [
      { "name": "Material Design Guidelines", "url": "https://material.io/design" },
      { "name": "iOS Human Interface Guidelines", "url": "https://developer.apple.com/design/human-interface-guidelines/" }
    ]
  },
  "App Architecture": {
    "title": "Mobile App Architecture",
    "description": "Understand mobile app architecture patterns including MVC, MVVM, Clean Architecture, and how to structure mobile applications.",
    "resources": [
      { "name": "video", "url": "https://www.youtube.com/watch?v=EF33KmyprEQ" },
      { "name": "article 1", "url": "https://developer.android.com/topic/architecture" },
      { "name": "article 2", "url": "https://madappgang.com/blog/mobile-app-architecture-everything-you-need-to-know/" }
    ]
  },
  "iOS Development": {
    "title": "iOS Development with Swift",
    "description": "Learn iOS development using Swift programming language. Master iOS SDK, UIKit, SwiftUI, and iOS app development lifecycle.",
    "resources": [
      { "name": "Swift Official Documentation", "url": "https://docs.swift.org/swift-book/" },
      { "name": "iOS Development Tutorial", "url": "https://developer.apple.com/tutorials/swiftui" },
      { "name": "UIKit Framework", "url": "https://developer.apple.com/documentation/uikit" },
      { "name": "iOS App Development Guide", "url": "https://developer.apple.com/develop/" }
    ]
  },
  "Android Development": {
    "title": "Android Development with Kotlin",
    "description": "Learn Android development using Kotlin programming language. Master Android SDK, Jetpack Compose, and Android app development.",
    "resources": [
      { "name": "Kotlin Official Documentation", "url": "https://kotlinlang.org/docs/home.html" },
      { "name": "Android Developer Guide", "url": "https://developer.android.com/guide" },
      { "name": "Jetpack Compose Tutorial", "url": "https://developer.android.com/jetpack/compose" },
      { "name": "Android Studio Documentation", "url": "https://developer.android.com/studio" }
    ]
  },
  "Cross-Platform": {
    "title": "Cross-Platform Development",
    "description": "Learn cross-platform development approaches and frameworks that allow you to build apps for multiple platforms with a single codebase.",
    "resources": [
      { "name": "article 1", "url": "https://www.geeksforgeeks.org/software-engineering/introduction-to-cross-platform-mobile-application-development/" },
      { "name": "article 2", "url": "https://clockwise.software/blog/cross-platform-app-development/" },
      { "name": "Cross-Platform Best Practices", "url": "https://youtu.be/TWFUSxqMJic?si=CyS03aWoIhC-i38H" }
    ]
  },
  "React Native": {
    "title": "React Native Development",
    "description": "Learn React Native for building native mobile applications using JavaScript and React. Master React Native components, navigation, and APIs.",
    "resources": [
      { "name": "React Native Documentation", "url": "https://reactnative.dev/docs/getting-started" },
      { "name": "React Native Tutorial", "url": "https://youtu.be/SqcY0GlETPk?si=uS_J55uCDl4kafG9" },
      { "name": "React Navigation", "url": "https://reactnavigation.org/" },
      { "name": "React Native Elements", "url": "https://reactnativeelements.com/" }
    ]
  },
  "Flutter": {
    "title": "Flutter Development",
    "description": "Learn Flutter framework for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase.",
    "resources": [
      { "name": "Flutter Official Documentation", "url": "https://docs.flutter.dev/" },
      { "name": "Flutter Tutorial", "url": "https://youtu.be/VPvVD8t02U8?si=F_gS8FbXWK80dHgl" },
      { "name": "Flutter Widget Catalog", "url": "https://docs.flutter.dev/development/ui/widgets" },
      { "name": "Dart Programming Language", "url": "https://dart.dev/guides" }
    ]
  },
  "Xamarin": {
    "title": "Xamarin Development",
    "description": "Learn Xamarin for building cross-platform mobile applications using C# and .NET. Master Xamarin.Forms and Xamarin.Native.",
    "resources": [
      { "name": "Xamarin Documentation", "url": "https://docs.microsoft.com/en-us/xamarin/" },
      { "name": "Xamarin.Forms Tutorial", "url": "https://docs.microsoft.com/en-us/xamarin/xamarin-forms/" },
      { "name": "Xamarin Best Practices", "url": "https://docs.microsoft.com/en-us/xamarin/cross-platform/deploy-test/performance" }
    ]
  },
  "Navigation": {
    "title": "Mobile App Navigation",
    "description": "Master navigation patterns and libraries for mobile applications including stack navigation, tab navigation, and drawer navigation.",
    "resources": [
      { "name": "React Navigation", "url": "https://reactnavigation.org/" },
      { "name": "Flutter Navigation", "url": "https://docs.flutter.dev/development/ui/navigation" },
      { "name": "iOS Navigation", "url": "https://developer.apple.com/documentation/uikit/view_controllers" },
      { "name": "Android Navigation", "url": "https://developer.android.com/guide/navigation" }
    ]
  },
  "API Integration": {
    "title": "Mobile API Integration",
    "description": "Learn how to integrate REST APIs and GraphQL with mobile applications. Master HTTP requests, authentication, and data handling.",
    "resources": [
      { "name": "video 1", "url": "https://youtu.be/ByGJQzlzxQg?si=nAALkaqMyD-B4ikE" },
      { "name": "video 2", "url": "https://youtu.be/Yzx7ihtCGBs?si=2vYLDB5Kd81AIQiv" }
    ]
  },
  "Local Storage": {
    "title": "Mobile Local Storage",
    "description": "Learn local storage solutions for mobile applications including SQLite, Core Data, SharedPreferences, and secure storage options.",
    "resources": [
      { "name": "SQLite for Mobile", "url": "https://www.sqlite.org/index.html" },
      { "name": "Core Data Tutorial", "url": "https://developer.apple.com/documentation/coredata" },
      { "name": "Android Data Storage", "url": "https://developer.android.com/guide/topics/data" }
    ]
  },
  "Push Notifications": {
    "title": "Push Notifications",
    "description": "Implement push notifications for mobile applications using Firebase Cloud Messaging, Apple Push Notification Service, and local notifications.",
    "resources": [
      { "name": "Firebase Cloud Messaging", "url": "https://firebase.google.com/docs/cloud-messaging" },
      { "name": "Apple Push Notifications", "url": "https://developer.apple.com/documentation/usernotifications" },
      { "name": "Android Notifications", "url": "https://developer.android.com/guide/topics/ui/notifiers/notifications" }
    ]
  },
  "Device Features": {
    "title": "Mobile Device Features",
    "description": "Learn to integrate device features like camera, GPS, sensors, biometrics, and hardware capabilities into mobile applications.",
    "resources": [
      { "name": "Camera Integration", "url": "https://developer.android.com/guide/topics/media/camera" },
      { "name": "Location Services", "url": "https://developer.apple.com/documentation/corelocation" },
      { "name": "Biometric Authentication", "url": "https://developer.android.com/training/sign-in/biometric-auth" }
    ]
  },
  "Testing": {
    "title": "Mobile App Testing",
    "description": "Learn testing strategies for mobile applications including unit testing, integration testing, UI testing, and automated testing frameworks.",
    "resources": [
      { "name": "Jest Testing Framework", "url": "https://jestjs.io/" },
      { "name": "Detox for React Native", "url": "https://github.com/wix/Detox" },
      { "name": "Flutter Testing", "url": "https://docs.flutter.dev/testing" }
    ]
  },
  "Debugging": {
    "title": "Mobile App Debugging",
    "description": "Master debugging techniques and tools for mobile applications including logging, crash reporting, performance monitoring, and debugging tools.",
    "resources": [
      { "name": "React Native Debugging", "url": "https://reactnative.dev/docs/debugging" },
      { "name": "Flutter Debugging", "url": "https://docs.flutter.dev/testing/debugging" },
      { "name": "Crash Reporting Tools", "url": "https://firebase.google.com/docs/crashlytics" }
    ]
  },
  "App Performance": {
    "title": "Mobile App Performance",
    "description": "Learn performance optimization techniques for mobile applications including memory management, battery optimization, and performance monitoring.",
    "resources": [
      { "name": "React Native Performance", "url": "https://reactnative.dev/docs/performance" },
      { "name": "Flutter Performance", "url": "https://docs.flutter.dev/perf" },
      { "name": "Performance Monitoring", "url": "https://firebase.google.com/docs/perf-mon" }
    ]
  },
  "Security": {
    "title": "Mobile App Security",
    "description": "Implement security best practices for mobile applications including data encryption, secure storage, network security, and app signing.",
    "resources": [
      { "name": "OWASP Mobile Security", "url": "https://owasp.org/www-project-mobile-top-10/" },
      { "name": "Data Encryption", "url": "https://developer.android.com/guide/topics/security/cryptography" },
      { "name": "App Signing", "url": "https://developer.android.com/studio/publish/app-signing" }
    ]
  },
  "App Store Deployment": {
    "title": "App Store Deployment",
    "description": "Learn to deploy mobile applications to app stores including Apple App Store and Google Play Store. Master app store guidelines and submission process.",
    "resources": [
      { "name": "Apple App Store Guidelines", "url": "https://developer.apple.com/app-store/review/guidelines/" },
      { "name": "Google Play Console", "url": "https://play.google.com/console/" }
    ]
  },
  "CI/CD": {
    "title": "Mobile CI/CD",
    "description": "Implement continuous integration and continuous deployment for mobile applications using tools like Fastlane, GitHub Actions, and Jenkins.",
    "resources": [
      { "name": "Fastlane Documentation", "url": "https://docs.fastlane.tools/" },
      { "name": "GitHub Actions for Mobile", "url": "https://github.com/features/actions" },
      { "name": "Jenkins for Mobile", "url": "https://www.jenkins.io/doc/book/pipeline/" }
    ]
  },
  "Analytics": {
    "title": "Mobile App Analytics",
    "description": "Implement analytics and tracking for mobile applications to understand user behavior, app performance, and business metrics.",
    "resources": [
      { "name": "Firebase Analytics", "url": "https://firebase.google.com/docs/analytics" },
      { "name": "Google Analytics for Mobile", "url": "https://analytics.google.com/" },
      { "name": "Mixpanel Documentation", "url": "https://developer.mixpanel.com/" }
    ]
  },
  "Monetization": {
    "title": "Mobile App Monetization",
    "description": "Learn monetization strategies for mobile applications including in-app purchases, subscriptions, advertising, and freemium models.",
    "resources": [
      { "name": "In-App Purchases", "url": "https://developer.apple.com/in-app-purchase/" },
      { "name": "Google Play Billing", "url": "https://developer.android.com/google/play/billing" },
      { "name": "Mobile Advertising", "url": "https://developers.google.com/admob" }
    ]
  },
  "Python Basics": {
    "title": "Python Programming Fundamentals",
    "description": "Learn Python programming language fundamentals including syntax, data types, control structures, functions, and object-oriented programming.",
    "resources": [
      { "name": "Python Official Documentation", "url": "https://docs.python.org/3/" },
      { "name": "Python Tutorial", "url": "https://www.w3schools.com/python/" },
      { "name": "codeacademy", "url": "https://elzero.org/study/mastering-python-study-plan/" }
    ]
  },
  "Mathematics & Statistics": {
    "title": "Mathematics and Statistics",
    "description": "Master essential mathematical concepts and statistical methods including linear algebra, calculus, probability, and inferential statistics.",
    "resources": [
      { "name": "Statistics Fundamentals", "url": "https://www.khanacademy.org/math/statistics-probability" },
      { "name": "Linear Algebra", "url": "https://www.khanacademy.org/math/linear-algebra" },
      { "name": "Probability Theory", "url": "https://www.khanacademy.org/math/probability" }
    ]
  },
  "Data Manipulation": {
    "title": "Data Manipulation with Pandas",
    "description": "Learn data manipulation techniques using Pandas library including data cleaning, transformation, filtering, and aggregation operations.",
    "resources": [
      { "name": "Pandas Documentation", "url": "https://pandas.pydata.org/docs/" },
      { "name": "Pandas Best Practices", "url": "https://pandas.pydata.org/pandas-docs/stable/user_guide/basics.html" }
    ]
  },
  "Data Visualization": {
    "title": "Data Visualization",
    "description": "Learn data visualization techniques using libraries like Matplotlib, Seaborn, and Plotly to create informative and engaging visualizations.",
    "resources": [
      { "name": "Matplotlib Documentation", "url": "https://matplotlib.org/" },
      { "name": "Seaborn Documentation", "url": "https://seaborn.pydata.org/" },
      { "name": "Plotly Documentation", "url": "https://plotly.com/python/" }
    ]
  },
  "Exploratory Data Analysis": {
    "title": "Exploratory Data Analysis (EDA)",
    "description": "Master exploratory data analysis techniques to understand data patterns, relationships, and insights through statistical analysis and visualization.",
    "resources": [
      { "name": "article 1", "url": "https://www.geeksforgeeks.org/data-analysis/what-is-exploratory-data-analysis/" },
      { "name": "article 2", "url": "https://www.ibm.com/think/topics/exploratory-data-analysis" },
      { "name": "video 1", "url": "https://www.youtube.com/watch?v=xi0vhXFPegw" }
    ]
  },
  "SQL & Databases": {
    "title": "SQL and Database Management",
    "description": "Learn SQL for data querying and database management. Master relational databases, SQL queries, and database design principles.",
    "resources": [
      { "name": "SQL Tutorial", "url": "https://www.w3schools.com/sql/" },
      { "name": "PostgreSQL Documentation", "url": "https://www.postgresql.org/docs/" },
      { "name": "MySQL Documentation", "url": "https://dev.mysql.com/doc/" }
    ]
  },
  "Feature Engineering": {
    "title": "Feature Engineering",
    "description": "Learn feature engineering techniques to create, transform, and select features that improve machine learning model performance.",
    "resources": [
      { "name": "video 1", "url": "https://www.youtube.com/watch?v=GduT2ZCc26E" },
      { "name": "article 1", "url": "https://www.geeksforgeeks.org/machine-learning/what-is-feature-engineering/" },
      { "name": "article 2", "url": "https://en.wikipedia.org/wiki/Feature_engineering" }
    ]
  },
  "Data Cleaning": {
    "title": "Data Cleaning and Preprocessing",
    "description": "Master data cleaning techniques including handling missing values, outliers, data validation, and data quality assessment.",
    "resources": [
      { "name": "article 1", "url": "https://www.geeksforgeeks.org/data-analysis/what-is-data-cleaning/" },
      { "name": "article 2", "url": "https://medium.com/internetstack/data-cleaning-vs-preprocessing-whats-the-difference-ae87d734dadd" },
      { "name": "article 3", "url": "https://www.freecodecamp.org/news/data-cleaning-and-preprocessing-with-pandasbdvhj/" }
    ]
  },
  "Machine Learning Basics": {
    "title": "Machine Learning Fundamentals",
    "description": "Learn fundamental machine learning concepts including supervised vs unsupervised learning, model evaluation, and basic algorithms.",
    "resources": [
      { "name": "article 1", "url": "https://scikit-learn.org/stable/" },
      { "name": "article 2", "url": "https://www.coursera.org/learn/machine-learning" },
      { "name": "course 1", "url": "https://www.youtube.com/watch?v=lUcZUCKDXbo&list=PLoOabVweB2r5dL0AVmuDbS54UvmCIlZsT" }
    ]
  },
  "Supervised Learning": {
    "title": "Supervised Learning Algorithms",
    "description": "Master supervised learning algorithms including linear regression, logistic regression, decision trees, random forests, and support vector machines.",
    "resources": [
      { "name": "video", "url": "https://youtu.be/W01tIRP_Rqs?si=B20Tg2la9T7wpmWD" },
      { "name": "video", "url": "https://www.youtube.com/watch?v=4qVRBYAdLAo" }
    ]
  },
  "Unsupervised Learning": {
    "title": "Unsupervised Learning Algorithms",
    "description": "Learn unsupervised learning algorithms including clustering (K-means, DBSCAN), dimensionality reduction (PCA), and association rules.",
    "resources": [
      { "name": "video 1", "url": "https://youtu.be/W01tIRP_Rqs?si=B20Tg2la9T7wpmWD" },
      { "name": "video 2", "url": "https://www.youtube.com/watch?v=JnnaDNNb380" },
      { "name": "video 3", "url": "https://www.youtube.com/watch?v=D6gtZrsYi6c" }
    ]
  },
  "Model Evaluation": {
    "title": "Model Evaluation and Validation",
    "description": "Learn model evaluation techniques including cross-validation, performance metrics, hyperparameter tuning, and model selection.",
    "resources": [
      { "name": "video 1", "url": "https://www.youtube.com/watch?v=blAsag2F60Y" },
      { "name": "video 2", "url": "https://www.youtube.com/watch?v=cseqEWRDs5Q" },
      { "name": "video 3", "url": "https://www.youtube.com/watch?v=yN7ypxC7838" }
    ]
  },
  "Deep Learning": {
    "title": "Deep Learning with Neural Networks",
    "description": "Learn deep learning concepts including neural networks, backpropagation, activation functions, and popular architectures.",
    "resources": [
      { "name": "TensorFlow Documentation", "url": "https://www.tensorflow.org/" },
      { "name": "PyTorch Documentation", "url": "https://pytorch.org/docs/" }
    ]
  },
  "Natural Language Processing": {
    "title": "Natural Language Processing (NLP)",
    "description": "Learn NLP techniques including text preprocessing, sentiment analysis, named entity recognition, and language models.",
    "resources": [
      { "name": "NLTK Documentation", "url": "https://www.nltk.org/" },
      { "name": "spaCy Documentation", "url": "https://spacy.io/usage" },
      { "name": "Transformers Library", "url": "https://huggingface.co/transformers/" }
    ]
  },
  "Big Data Technologies": {
    "title": "Big Data Processing",
    "description": "Learn big data technologies including Apache Spark, Hadoop, and distributed computing for handling large-scale datasets.",
    "resources": [
      { "name": "Apache Spark Documentation", "url": "https://spark.apache.org/docs/latest/" },
      { "name": "Hadoop Documentation", "url": "https://hadoop.apache.org/docs/current/" }
    ]
  },
  "Cloud Platforms": {
    "title": "Cloud Computing for Data Science",
    "description": "Learn cloud platforms for data science including AWS, Google Cloud, and Azure for scalable data processing and model deployment.",
    "resources": [
      { "name": "AWS Machine Learning", "url": "https://aws.amazon.com/machine-learning/" },
      { "name": "Google Cloud AI", "url": "https://cloud.google.com/ai" },
      { "name": "Azure Machine Learning", "url": "https://azure.microsoft.com/en-us/services/machine-learning/" }
    ]
  },
  "MLOps & Deployment": {
    "title": "MLOps and Model Deployment",
    "description": "Learn MLOps practices including model versioning, CI/CD for ML, model monitoring, and deployment strategies.",
    "resources": [
      { "name": "MLflow Documentation", "url": "https://mlflow.org/docs/latest/index.html" },
      { "name": "Kubeflow Documentation", "url": "https://www.kubeflow.org/docs/" }
    ]
  },
  "Advanced Analytics": {
    "title": "Advanced Analytics Techniques",
    "description": "Learn advanced analytics techniques including time series analysis, A/B testing, predictive analytics, and business intelligence.",
    "resources": [
      { "name": "Time Series Analysis", "url": "https://www.youtube.com/watch?v=GE3JOFwTWVM" },
      { "name": "A/B Testing Guide", "url": "https://www.youtube.com/watch?v=jEpwNaHjD68" },
      { "name": "Predictive Analytics", "url": "https://www.youtube.com/watch?v=QoEpC7jUb9k" }
    ]
  },
  "Real-world Projects": {
    "title": "Real-world Data Science Projects",
    "description": "Work on real-world data science projects to apply your skills and build a portfolio. Focus on end-to-end project development.",
    "resources": [
      { "name": "Kaggle Competitions", "url": "https://www.kaggle.com/competitions" },
      { "name": "GitHub Data Science Projects", "url": "https://github.com/topics/data-science" }
    ]
  }
}